#!/usr/bin/env python
from interface import *
from thrift import Thrift
from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
import sys
import argparse, cmd

transport = TSocket.TSocket('localhost', 9155)
transport = TTransport.TBufferedTransport(transport)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ShowService.Client(protocol)

# Connect!
transport.open()

class ShowLabClient(cmd.Cmd):
    """ShowLab simple command-line client."""
    
    prompt = ">> "
    intro = "\nShowLab simple command-line client\n"
    
    def do_add_cue(self, line):
        """add_cue [cue_number] [cue_name]"""
        parts = line.split(" ", 2)
        number = -1;
        name = "";
        if len(parts) >= 1:
                try:
                    number = float(parts[0])
                except ValueError:
                    pass
        if len(parts) >= 2:
                name = parts[1]
        id = client.addCueWithNumber(number, name)
        print id
        d = client.getCue(id)
        print "Added cue", d.number, ":", d.name
    
    def do_EOF(self, line):
        print
        transport.close()
        sys.exit()

ShowLabClient().cmdloop()
